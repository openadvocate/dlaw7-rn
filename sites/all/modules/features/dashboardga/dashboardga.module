<?php
/**
 * @file
 * Code for the Google Analytics for Dashboard feature.
 */

include_once 'dashboardga.features.inc';

/**
 * Implements hook_menu().
 */
function dashboardga_menu() {
  $items['admin/dashboard/reports'] = array(
    'title' => 'Reports',
    'description' => 'DLAW Dashboard - Report',
    'page callback' => 'dashboardga_report_page',
    'access callback' => 'dashboardga_report_access',
    'weight' => 15,
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 *
 */
function dashboardga_report_access() {
  if ('UA-0000000-00' == variable_get('googleanalytics_account', 'UA-0000000-00')) {
    return FALSE;
  }

  return user_access('access dlaw dashboard');
}

/**
 * Implements hook_theme_registry_alter().
 */
function dashboardga_theme_registry_alter(&$theme_registry) {
  $theme_registry['file_link']['theme_path'] = drupal_get_path('module', 'dashboardga');
  $theme_registry['file_link']['function'] = 'dashboardga_file_link';
}

/**
 * Override core's theme_file_link.
 * To insert onclick attr for Google Analytics download track.
 */
function dashboardga_file_link($variables) {
  $file = $variables['file'];
  $icon_directory = $variables['icon_directory'];

  $url = file_create_url($file->uri);
  $icon = theme('file_icon', array('file' => $file, 'icon_directory' => $icon_directory));

  // Set options as per anchor format described at
  // http://microformats.org/wiki/file-format-examples
  $options = array(
    'attributes' => array(
      'type' => $file->filemime . '; length=' . $file->filesize,
    ),
  );

  // Use the description as the link text if available.
  if (empty($file->description)) {
    $link_text = $file->filename;
  }
  else {
    $link_text = $file->description;
    $options['attributes']['title'] = check_plain($file->filename);
  }

  $nid  = 'nid:' . (is_numeric(1) ? arg(1) : '');
  $file = 'fid:' . $file->fid . ': ' . htmlentities($file->filename);
  $options['attributes']['onclick'] = "_gaq.push(['_trackEvent', 'Download', '$nid', '$file']);";

  return '<span class="file">' . $icon . ' ' . l($link_text, $url, $options) . '</span>';
}

/**
 *  Implements hook_block_info().
 */
function dashboardga_block_info() {
  $blocks['ga'] = array(
    'info' => t('Google Analytics'),
  );

  $blocks['dashboardga_ga'] = array(
    'info' => t('Dashboard: Google Analytics'),
  );

  $blocks['dashboardga_recent_searches'] = array(
    'info' => t('Dashboard: Recent Site Search'),
  );

  $blocks['dashboardga_popular_pages'] = array(
    'info' => t('Dashboard: Most Visited Pages'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function dashboardga_block_view($delta = '') {
  $function = $delta . '_block';
  if (function_exists($function)) {
    return $function();
  }
}

function dashboardga_ga_block() {
  if ('UA-0000000-00' == variable_get('googleanalytics_account', 'UA-0000000-00') or
      !variable_get('google_analytics_reports_profile_id', 0))
  {
    // Add blanks. Otherwise, the block would appear with annoying "(empty)"
    $block['subject'] = ' ';
    $block['content'] = ' ';

    return $block;
  }

  drupal_add_js(drupal_get_path('module', 'dashboardga') . '/js/Chart.min.js');
  drupal_add_css(drupal_get_path('module', 'dashboardga') . '/css/dashboardga.css');

  $output = '';

  // Pull GA data. *********************************************************
  // Get last 30 days.
  $params = array(
    'metrics' => array('ga:sessions', 'ga:users', 'ga:pageviews'),
    'start_date' => strtotime('-30 days'),
    'end_date' => strtotime('-1 day'),
  );
  $feed = google_analytics_api_report_data($params);

  $result = $feed->results->rows[0];

  // Get 30 days before past 30 days for comparison.
  $params = array(
    'metrics' => array('ga:sessions', 'ga:users', 'ga:pageviews'),
    'start_date' => strtotime('-60 days'),
    'end_date' => strtotime('-31 day'),
  );
  $feed = google_analytics_api_report_data($params);

  $result_prev = $feed->results->rows[0];

  $change = round(($result['sessions'] - $result_prev['sessions'])/$result_prev['sessions']*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;
  $change_class = $change >= 0 ? 'ga-change-up' : 'ga-change-down';
  $list[] = '<div class="change_container"> <div class="ga-label">Visits <br/></div>
              <div class="clearfix cgange_holder">
                <span class="ga-value">'
                  . number_format($result['sessions']) .
                  '</span>
              <span class="ga-percent ' . $change_class . '">'
              . $change .
              '%</span>
              </div></div>';

  $change = round(($result['users'] - $result_prev['users'])/$result_prev['users']*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;
  $change_class = $change >= 0 ? 'ga-change-up' : 'ga-change-down';

  $list[] = '<div class="change_container"> <div class="ga-label">Unique Visitors <br/></div>
              <div class="clearfix cgange_holder">
                <span class="ga-value">'
                  . number_format($result['users']) .
                '</span>
              <span class="ga-percent ' . $change_class . '">'
                . $change .
              '%</span>
              </div></div>';

  $page_visit = $result['pageviews'] / $result['sessions'];
  $page_visit_prev = $result_prev['pageviews'] / $result_prev['sessions'];
  $change = round(($page_visit - $page_visit_prev)/$page_visit_prev*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;
  $change_class = $change >= 0 ? 'ga-change-up' : 'ga-change-down';

  $list[] = '<div class="change_container"> <div class="ga-label">Pages/Visit <br/></div>
              <div class="clearfix cgange_holder">
                <span class="ga-value">'
                  . round($page_visit, 1) .
                '</span>
              <span class="ga-percent ' . $change_class . '">'
              . $change .
              '%</span>
              </div></div>';

  $attributes = array('class' => array('ga_site_usage_list', 'clearfix'));
  $output .= '<h2 class="ga_list_title last_seven"><i class="fa fa-tachometer"></i> Site Usage (last 30 days)</h2>' . theme('item_list', array('items' => $list, 'attributes' => $attributes ));

  // Pull GA data. *********************************************************
  $params = array(
    'metrics' => array('ga:pageviews'),
    'dimensions' => array('ga:date'),
    'segment' => 'gaid::-1',
    'sort_metric' => array('ga:date'),
    'start_date' => strtotime('-30 days'),
    'end_date' => strtotime('-1 day'),
  );
  $feed = google_analytics_api_report_data($params);

  $labels = $values = array();
  foreach ($feed->results->rows as $row) {
    $labels[] = date('j', strtotime($row['date']));
    $values[] = (int)$row['pageviews'];
  }

  if (empty($feed->error)) {
    $labels = join(', ', $labels);
    $values = join(', ', $values);

    $chart_code = <<< CHART
    <br>
    <canvas id="canvas-user-activity" width="400" height="120" style="display: block; width: 400px; height: 120px;"></canvas>

    <script>
      var canvas = document.getElementById('canvas-user-activity');
      var context = canvas.getContext('2d');
      context.rect(0, 0, canvas.width, canvas.height);

      new Chart("canvas-user-activity", {
        type: 'line',
        data: {
          labels: [{$labels}],
          datasets: [
            {
              label: "Page views",
              fill: 'origin',
              lineTension: 0,
              backgroundColor: "rgba(80, 183, 217, 0.3)",
              borderColor: '#4DB8DB',
              data: [{$values}],
            },
          ]
        },
        options: {
          legend:{
            display: false
          }
        }
      });
    </script>
CHART;
    $chart['visitors'] = array(
      '#markup' => $chart_code
    );
  }
  else {
    $chart = array('#markup' => '<p style="margin:2em 4em 4em">Google Analytics Report not set up.</p>');
  }

  $output .= '<h2 class="ga_list_title last_30"><i class="fa fa-bar-chart-o"></i> Page Views in the last 30 days</h2>' . drupal_render($chart);

  $block['content'] = $output;
  $block['subject'] = '<span class="google_analytics_title">Google Analytics</span>';

  return $block;
}

/**
 * @see dblog_top().
 */
function dashboardga_recent_searches_block() {
  $output = '';

  // Display chart
  $counts = db_query(
   "SELECT FROM_UNIXTIME(timestamp, '%Y-%m-%d') AS date, count(*) AS count
    FROM watchdog
    WHERE type = 'search' AND FROM_UNIXTIME(timestamp, '%Y-%m-%d')
      BETWEEN DATE_SUB(DATE(NOW()), INTERVAL 30 DAY) AND DATE_SUB(DATE(NOW()), INTERVAL 1 DAY)
    GROUP BY FROM_UNIXTIME(timestamp, '%Y-%m-%d')")->fetchAllKeyed();

  $days = array();
  $begin = (new DateTime)->modify('-30 day');
  $end = new DateTime;
  for ($d = $begin; $d < $end; $d->modify('+1 day')) {
    $date = $d->format('Y-m-d');

    $days[$date] = isset($counts[$date]) ? $counts[$date] : 0;
  }


  $labels = array_map(function ($val) {
    return sprintf('%d', substr($val, 8));
  }, array_keys($days));
  $labels = join(', ', $labels);

  $values = join(', ', $days);

  $chart_code = <<< CHART
    <br>
    <canvas id="canvas-recent-searches" width="400" height="120" style="display: block; width: 400px; height: 120px;"></canvas>

    <script>
      var canvas = document.getElementById('canvas-recent-searches');
      var context = canvas.getContext('2d');
      context.rect(0, 0, canvas.width, canvas.height);

      new Chart("canvas-recent-searches", {
        type: 'line',
        data: {
          labels: [{$labels}],
          datasets: [
            {
              label: "Searches",
              fill: 'origin',
              lineTension: 0,
              backgroundColor: "rgba(239, 162, 45, 0.3)",
              borderColor: '#efa22d',
              data: [{$values}],
            },
          ]
        },
        options: {
          legend:{
            display: false
          }
        }
      });
    </script>
CHART;
  $output .= $chart_code;

  // 10 recent search keywords
  $query = db_select('watchdog', 'w')->extend('PagerDefault');
  $result = $query
    ->fields('w', array('message', 'variables'))
    ->condition('w.type', 'search')
    ->groupBy('message')
    ->groupBy('variables')
    ->orderBy('wid', 'desc')
    ->limit(10)
    ->execute();

  $list = array();
  foreach ($result as $dblog) {
    if ($log = theme('dblog_message', array('event' => $dblog))) {
      $list[] = '&nbsp;&nbsp;<i class="fa fa-search text-muted"></i>&nbsp;&nbsp; ' . $log;
    }
  }

  $output .= '<h2 class="ga_list_title last_30"><i class="fa fa-clock-o"></i> Recent Searches</h2>';
  $attributes = array('class' => array('ga_list', 'clearfix'));
  $output .= theme('item_list', array('items' => $list, 'attributes' => $attributes));
  $output .= '<div style="margin: 0.5em 3em">' . l('More', 'admin/dashboard/seo/recent-searches') . '</div>';

  // Top searches
  $query = db_select('watchdog', 'w')->extend('PagerDefault');
  $query->addExpression('COUNT(wid)', 'count');
  $result = $query
    ->fields('w', array('message', 'variables'))
    ->condition('w.type', 'search')
    ->condition('w.timestamp', REQUEST_TIME - 86400*30, '>')
    ->groupBy('message')
    ->groupBy('variables')
    ->orderBy('count', 'desc')
    ->limit(20)
    ->execute();

  $list = array();
  foreach ($result as $dblog) {
    if ($log = theme('dblog_message', array('event' => $dblog))) {
      $list[] = '&nbsp;&nbsp;<i class="fa fa-search text-muted"></i>&nbsp;&nbsp; ' . $log;
    }
  }

  $output .= '<h2 class="ga_list_title last_30"><i class="fa fa-search"></i> Top Searches</h2>';
  $attributes = array('class' => array('ga_list', 'clearfix'));
  $output .= theme('item_list', array('items' => $list, 'attributes' => $attributes));
  $output .= '<div style="margin: 0.5em 3em">' . l('More', 'admin/dashboard/seo/top-searches') . '</div>';

  $block['content'] = $output;
  $block['subject'] = '<i class="fa fa-calendar"></i> Keyword Searches in the last 30 days';

  return $block;
}

function dashboardga_popular_pages_block() {
  if ('UA-0000000-00' == variable_get('googleanalytics_account', 'UA-0000000-00') or
      !variable_get('google_analytics_reports_profile_id', 0))
  {
    $feed = NULL;
  }
  else {
    $params = array(
      'metrics' => array('ga:pageviews'),
      'dimensions' => array('ga:pagePath', 'ga:pageTitle'),
      'segment' => 'gaid::-1',
      'sort_metric' => array('-ga:pageviews'),
      'start_date' => strtotime('-30 days'),
      'end_date' => strtotime('-1 day'),
      'sort' => '-ga:pageviews',
      'filters' => 'ga:pageTitle!=(not set)',
      'max_results' => 41,
    );
    $feed = google_analytics_api_report_data($params);
  }

  if ($feed and !empty($feed->results->rows)) {
    $list = array();
    foreach ($feed->results->rows as $row) {
      if ($row['pagePath'] == '/') continue;

      list($title, ) = explode(' | ', $row['pageTitle']);

      // Title
      $item = l($title, substr($row['pagePath'], 1))
           . '<div class="ga-popular-data">';

      $node = NULL;
      if (preg_match('#^/node/(\d+)#', $row['pagePath'], $match)) {
        $node = node_load($match[1]);
      }

      // Updated time (ago)
      $ago = '--';
      $class= 'text-muted';
      if ($node) {
        $interval = REQUEST_TIME - $node->changed;
        $ago = format_interval($interval, 1) . ' ago';
        if ($interval > 86400 * 365) {
          $class = 'text-danger';
        }
        elseif ($interval < 86400 * 90) {
          $class = 'text-success';
        }
      }
      $item .= "<div class=\"ga-popular-data-time $class\" title=\"Last updated time\">$ago</div>";

      // Page views
      $rank_1_views = empty($rank_1_views) ? $row['pageviews'] : $rank_1_views;
      $width = round($row['pageviews'] / $rank_1_views * 100, 2) . '%';
      $item .= '<div class="ga-popular-data-views" title="Views in the last 30 days">'
             . "<div class=\"ga-popular-data-views-bg\" style=\"width: $width;\"></div>"
             . '<div class="ga-popular-data-views-num">' . number_format($row['pageviews']) . '</div>'
             . '</div>';

      // Feedback
      $count = array(
        'total' => '',
        'very'  => '',
        'some'  => '',
        'not'   => '',
      );

      $tooltip = '';

      // Upperbound to scale bar chart. Use first row's view count.
      $rate_max = (int)($rank_1_views * 0.75);

      if ($node) {
        $rates = rate_get_results('node', $node->nid, 1);

        if ($total = $rates['count']) {
          $rate_not  = !empty($rates['options'][1]) ? $rates['options'][1] : 0;
          $rate_some = !empty($rates['options'][2]) ? $rates['options'][2] : 0;
          $rate_very = !empty($rates['options'][3]) ? $rates['options'][3] : 0;
          $scale = $total / $rate_max * 0.9;

          $count = array(
            'total' => $total ? number_format($total) : '',
            'very'  => ($bar1 = $rate_very/$total*100) * $scale,
            'some'  => (($bar2 = $rate_some/$total*100) + $bar1) * $scale,
            'not'   => ($rate_not/$total*100 + $bar1 + $bar2) * $scale,
          );

          $tooltip = "Feedback:\n- Very Helpful: $rate_very\n- Somewhat Helpful: $rate_some\n- Not Helpful: $rate_not";
        }
      }

      $item .= "<div class=\"ga-popular-feedback\" title=\"$tooltip\">{$count['total']}</div>"
        . "<div class=\"ga-popular-feedback-bar\" title=\"$tooltip\">"
        . "<div class=\"ga-popular-feedback-bar-1\" style=\"width: {$count['very']}%\"></div>"
        . "<div class=\"ga-popular-feedback-bar-2\" style=\"width: {$count['some']}%\"></div>"
        . "<div class=\"ga-popular-feedback-bar-3\" style=\"width: {$count['not']}%\"></div>"
        . '</div>'
        . '</div>';

      $list[] = $item;
    }

    $attributes = array('class' => array('ga_list','ga_most_visited_list','clearfix'));
    $output = theme('item_list', array('items' => $list, 'type' => 'ol', 'attributes' => $attributes));
  }
  else {
    $output = '<p style="margin:2em 4em 4em">Data not available.</p>';
  }

  $block['content'] = $output;
  $block['subject'] = '<i class="fa fa-globe"></i> Most Visited Pages in last 30 days';

  return $block;
}

function ga_block() {
  $block = array();

  if (TRUE) {
    if ('UA-0000000-00' == variable_get('googleanalytics_account', 'UA-0000000-00')) {
      // Add blanks. Otherwise, the block would appear with annoying "(empty)"
      $block['subject'] = ' ';
      $block['content'] = ' ';

      return $block;
    }

    drupal_add_css(drupal_get_path('module', 'dashboardga') . '/css/dashboardga.css');

    $output = '';







    // Pull GA data. *********************************************************
    $params = array(
      'metrics' => array('ga:pageviews'),
      'dimensions' => array('ga:date'),
      'segment' => 'gaid::-1',
      'sort_metric' => array('ga:date'),
      'start_date' => strtotime('-30 days'),
      'end_date' => strtotime('-1 day'),
    );
    $feed = google_analytics_api_report_data($params);

    $data = array();
    foreach ($feed->results->rows as $row) {
      $data[] = array(date('j', strtotime($row['date'])), (int)$row['pageviews']);
    }

    if (empty($feed->error)) {
      $chart = array(
        '#type' => 'chart',
        '#chart_type' => 'area',
        '#legend_position' => 'none',
      );

      $chart['visitors'] = array(
        '#type' => 'chart_data',
        '#title' => t('Page Views'),
        '#data' => $data,
        '#color' => '#4DB8DB',
      );
    }
    else {
      $chart = array('#markup' => '<p style="margin:2em 4em 4em">Google Analytics Report not set up.</p>');
    }

    $output .= '<h2 class="ga_list_title last_30"><i class="fa fa-bar-chart-o"></i> Page Views in the last 30 days</h2>' . drupal_render($chart);


    // Pull GA data. *********************************************************
    // Get last 30 days.
    $params = array(
      'metrics' => array('ga:sessions', 'ga:users', 'ga:pageviews'),
      'start_date' => strtotime('-30 days'),
      'end_date' => strtotime('-1 day'),
    );
    $feed = google_analytics_api_report_data($params);

    $result = $feed->results->rows[0];

    // Get 30 days before past 30 days for comparison.
    $params = array(
      'metrics' => array('ga:sessions', 'ga:users', 'ga:pageviews'),
      'start_date' => strtotime('-60 days'),
      'end_date' => strtotime('-31 day'),
    );
    $feed = google_analytics_api_report_data($params);

    $result_prev = $feed->results->rows[0];

    $change = round(($result['sessions'] - $result_prev['sessions'])/$result_prev['sessions']*100, 1);
    $change = ($change >= 0 ? '+' : '') . $change;
    $change_class = $change >= 0 ? 'ga-change-up' : 'ga-change-down';
    $list[] = '<div class="change_container"> <div class="ga-label">Visits <br/></div>
                <div class="clearfix cgange_holder">
                  <span class="ga-value">'
                    . number_format($result['sessions']) .
                    '</span>
                <span class="ga-percent ' . $change_class . '">'
                . $change .
                '%</span>
                </div></div>';

    $change = round(($result['users'] - $result_prev['users'])/$result_prev['users']*100, 1);
    $change = ($change >= 0 ? '+' : '') . $change;
    $change_class = $change >= 0 ? 'ga-change-up' : 'ga-change-down';

    $list[] = '<div class="change_container"> <div class="ga-label">Unique Visitors <br/></div>
                <div class="clearfix cgange_holder">
                  <span class="ga-value">'
                    . number_format($result['users']) .
                  '</span>
                <span class="ga-percent ' . $change_class . '">'
                  . $change .
                '%</span>
                </div></div>';

    $page_visit = $result['pageviews'] / $result['sessions'];
    $page_visit_prev = $result_prev['pageviews'] / $result_prev['sessions'];
    $change = round(($page_visit - $page_visit_prev)/$page_visit_prev*100, 1);
    $change = ($change >= 0 ? '+' : '') . $change;
    $change_class = $change >= 0 ? 'ga-change-up' : 'ga-change-down';

    $list[] = '<div class="change_container"> <div class="ga-label">Pages/Visit <br/></div>
                <div class="clearfix cgange_holder">
                  <span class="ga-value">'
                    . round($page_visit, 1) .
                  '</span>
                <span class="ga-percent ' . $change_class . '">'
                . $change .
                '%</span>
                </div></div>';

    // TODO: $list[] = FEEDBACKS

    $attributes = array('class' => array('ga_site_usage_list', 'clearfix'));
    $output .= '<h2 class="ga_list_title last_seven"><i class="fa fa-tachometer"></i> Site Usage (last 30 days)</h2>' . theme('item_list', array('items' => $list, 'attributes' => $attributes ));


    // Pull GA data. *********************************************************
    $params = array(
      'metrics' => array('ga:pageviews'),
      'dimensions' => array('ga:pagePath', 'ga:pageTitle'),
      'segment' => 'gaid::-1',
      'sort_metric' => array('-ga:pageviews'),
      'start_date' => strtotime('-30 days'),
      'end_date' => strtotime('-1 day'),
      'sort' => '-ga:pageviews',
      'filters' => 'ga:pageTitle!=(not set)',
      'max_results' => 20,
    );
    $feed = google_analytics_api_report_data($params);

    $list = array();
    foreach ($feed->results->rows as $row) {
      if ($row['pagePath'] == '/') {
        $title = 'Home page';
      }
      else {
        list($title, ) = explode(' | ', $row['pageTitle']);
      }
      $list[] = '<span class="ga-link">' . l($title, substr($row['pagePath'], 1)) . '</span>' . '<span class="ga-num">' . number_format($row['pageviews']) . '</span>';
    }

    $attributes = array('class' => array('ga_list','ga_most_visited_list','clearfix'));
    $output .= '<h2 class="ga_list_title most_visited" ><i class="fa fa-desktop"></i>Most Visited Pages (Popular Pages)</h2>' . theme('item_list', array('items' => $list, 'type' => 'ul', 'attributes' => $attributes) );


    // Pull GA data. *********************************************************
    $params = array(
      'metrics' => array('ga:sessions'),
      'dimensions' => array('ga:source', 'ga:medium'),
      'sort_metric' => array('-ga:sessions'),
      'filters' => 'ga:medium==referral',
      'start_date' => strtotime('-30 days'),
      'end_date' => strtotime('-1 day'),
      'max_results' => 10,
    );

    $feed = google_analytics_api_report_data($params);

    $list = array();
    foreach ($feed->results->rows as $row) {
      $list[] = '<span class="ga-link">' . $row['source'] . '</span>' . '<span class="ga-num">' . number_format($row['sessions']) . '</span>';
    }
    $attributes = array('class' => array('ga_list','ga_referred_trafic','clearfix'));
    $output .= '<h2 class="ga_list_title" ><i class="fa fa-truck"></i> Referral Traffic Sources</h2>' . theme('item_list', array('items' => $list, 'type' => 'ul', 'attributes' => $attributes) );


    // Pull GA data. *********************************************************
    $params = array(
      'metrics' => array('ga:sessions'),
      'dimensions' => array('ga:keyword'),
      'sort_metric' => array('-ga:sessions'),
      'start_date' => strtotime('-30 days'),
      'end_date' => strtotime('-1 day'),
      'filters' => 'ga:keyword!=(not provided);ga:keyword!=(not set)',
      'max_results' => 10,
    );

    $feed = google_analytics_api_report_data($params);

    $list = array();
    foreach ($feed->results->rows as $row) {
      $list[] = '<span class="ga-link">' . $row['keyword'] . '</span>' . '<span class="ga-num">' . number_format($row['sessions']) . '</span>';
    }

    $attributes = array('class' => array('ga_list','ga_google_searches','clearfix'));
    $output .= '<h2 class="ga_list_title"><i class="fa fa-globe"></i> Google Searches</h2>' . theme('item_list', array('items' => $list, 'type' => 'ul', 'attributes' => $attributes) );


    // Pull GA data. *********************************************************
    /*
    Case 42104: Comment out until figuring out to work with GA for site search.
    $params = array(
      'metrics' => array('ga:sessions'),
      'dimensions' => array('ga:searchKeyword'),
      'sort_metric' => array('-ga:sessions'),
      'start_date' => strtotime('-30 days'),
      'end_date' => strtotime('-1 day'),
      // 'filters' => 'ga:keyword!=(not provided);ga:keyword!=(not set)',
      'max_results' => 10,
    );

    $feed = google_analytics_api_report_data($params);

    $list = array();
    foreach ($feed->results->rows as $row) {
      $list[] = '<span class="ga-link">' . $row['searchkeyword'] . '</span>' . '<span class="ga-num">' . number_format($row['sessions']) . '</span>';
    }

    $attributes = array('class' => array('ga_list','ga_site_searches','clearfix'));
    $output .= '<h2 class="ga_list_title"><i class="fa fa-search"></i> Site Searches</h2>' . theme('item_list', array('items' => $list, 'type' => 'ul', 'attributes' => $attributes) );
    */

    $block['content'] = $output;
    $block['subject'] = '<span class="google_analytics_title">Google Analytics</span>';
  }

  return $block;
}

/**
 *  Menu callback for admin/dashboard/report.
 */
function dashboardga_report_page() {
  if ('UA-0000000-00' == variable_get('googleanalytics_account', 'UA-0000000-00')) {
    return 'Google Analytics not configured yet.';
  }

  $start_time = strtotime('1/1 last year');
  $end_time   = strtotime('1/1 this year');
  $last_year  = date('Y', strtotime('last year'));
  $prev_year  = date('Y', strtotime('-2 years'));
  drupal_add_css(drupal_get_path('module', 'dashboardga') . '/css/dashboardga.css');

  $output = '';

  // Pull GA data. *********************************************************
  $params = array(
    'metrics' => array('ga:sessions', 'ga:users', 'ga:pageviews'),
    'start_date' => $start_time,
    'end_date' => $end_time,
  );
  $feed = google_analytics_api_report_data($params);

  $result = $feed->results->rows[0];

  // Get 1 year before last year.
  $params = array(
    'metrics' => array('ga:sessions', 'ga:users', 'ga:pageviews'),
    'start_date' => strtotime('1/1 -2 years'),
    'end_date' => strtotime('1/1 -1 year'),
  );
  $feed = google_analytics_api_report_data($params);

  $result_prev = $feed->results->rows[0];

  $rows = array();

  $change = round(($result['pageviews'] - $result_prev['pageviews'])/$result_prev['pageviews']*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;

  $summary_prev_data_exists = $result_prev['pageviews'] ? TRUE : FALSE;
  $summary_views = number_format($result['pageviews']);
  $summary_views_change = $change;

  $rows[] = array(
      'Page views',
      number_format($result_prev['pageviews']),
      number_format($result['pageviews']),
      $change . '%',
  );

  $change = round(($result['sessions'] - $result_prev['sessions'])/$result_prev['sessions']*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;

  $summary_sessions = number_format($result['sessions']);
  $summary_sessions_change = $change;

  $rows[] = array(
      'Sessions',
      number_format($result_prev['sessions']),
      number_format($result['sessions']),
      $change . '%',
  );

  $change = round(($result['users'] - $result_prev['users'])/$result_prev['users']*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;

  $summary_unique_visitors = number_format($result['users']);
  $summary_visitor_change = $change;

  $rows[] = array(
      'Unique visitors',
      number_format($result_prev['users']),
      number_format($result['users']),
      $change . '%',
  );

  $pps_prev = $result_prev['pageviews'] / $result_prev['sessions'];
  $pps = $result['pageviews'] / $result['sessions'];
  $change = round(($pps - $pps_prev)/$pps_prev*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;
  $rows[] = array(
      'Pages per session',
      number_format($result_prev['pageviews'] / $result_prev['sessions'], 2),
      number_format($result['pageviews'] / $result['sessions'], 2),
      $change . '%',
  );

  $header = array('Metric', $prev_year, $last_year, 'Change');

  $output .= '<h2 class="ga_list_title"><i class="fa fa-tachometer"></i> Site Usage</h2>'
           . theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('class' => array('ga_list'))));

  // Pull GA data. *********************************************************
  $params = array(
    'metrics' => array('ga:sessions'),
    'dimensions' => array('ga:deviceCategory'),
    'start_date' => $start_time,
    'end_date' => $end_time,
  );
  $feed = google_analytics_api_report_data($params);

  $result = array('total' => 0);
  foreach ($feed->results->rows as $res) {
    $result[$res['deviceCategory']] = $res['sessions'];
    $result['total'] += $res['sessions'];
  }

  // Get 1 year before last year.
  $params = array(
    'metrics' => array('ga:sessions'),
    'dimensions' => array('ga:deviceCategory'),
    'start_date' => strtotime('1/1 -2 years'),
    'end_date' => strtotime('1/1 -1 year'),
  );
  $feed = google_analytics_api_report_data($params);

  $result_prev = array('total' => 0);
  foreach ($feed->results->rows as $res) {
    $result_prev[$res['deviceCategory']] = $res['sessions'];
    $result_prev['total'] += $res['sessions'];
  }

  $rows = array();

  $percent_prev = $result_prev['desktop'] / $result_prev['total'] * 100;
  $percent = $result['desktop'] / $result['total'] * 100;
  $change = round(($percent - $percent_prev)/$percent_prev*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;
  $rows[] = array(
      'Device: Desktop',
      round($percent_prev, 1) . '%',
      round($percent, 1) . '%',
      $change . '%',
  );

  $percent_prev = $result_prev['mobile'] / $result_prev['total'] * 100;
  $percent = $result['mobile'] / $result['total'] * 100;
  $change = round(($percent - $percent_prev)/$percent_prev*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;

  $summary_device_mobile = round($percent, 1);

  $rows[] = array(
      'Device: Mobile',
      round($percent_prev, 1) . '%',
      round($percent, 1) . '%',
      $change . '%',
  );

  $percent_prev = $result_prev['tablet'] / $result_prev['total'] * 100;
  $percent = $result['tablet'] / $result['total'] * 100;
  $change = round(($percent - $percent_prev)/$percent_prev*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;
  $rows[] = array(
      'Device: Tablet',
      round($percent_prev, 1) . '%',
      round($percent, 1) . '%',
      $change . '%',
  );

  $header = array('Metric', $prev_year, $last_year, 'Change');

  $output .= '<h2 class="ga_list_title"><i class="fa fa-mobile"></i> Devices</h2>'
           . theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => array('class' => array('ga_list'))));

  // Pull GA data. *********************************************************
  $params = array(
    'metrics' => array('ga:pageviews'),
    'dimensions' => array('ga:month'),
    'segment' => 'gaid::-1',
    'sort_metric' => array('ga:month'),
    'start_date' => $start_time,
    'end_date' => $end_time,
  );
  $feed = google_analytics_api_report_data($params);

  $data1 = $data2 = array('01' => 0, '02' => 0, '03' => 0, '04' => 0, '05' => 0, '06' => 0,
                          '07' => 0, '08' => 0, '09' => 0, '10' => 0, '11' => 0, '12' => 0);
  foreach ($feed->results->rows as $row) {
    $data1[$row['month']] = (int)$row['pageviews'];
  }

  // Get 1 year before last year.
  $params = array(
    'metrics' => array('ga:pageviews'),
    'dimensions' => array('ga:month'),
    'segment' => 'gaid::-1',
    'sort_metric' => array('ga:month'),
    'start_date' => strtotime('1/1 -2 years'),
    'end_date' => strtotime('1/1 -1 year'),
  );
  $feed = google_analytics_api_report_data($params);

  foreach ($feed->results->rows as $row) {
    $data2[$row['month']] = (int)$row['pageviews'];
  }

  $chart = array(
    '#type' => 'chart',
    '#chart_type' => 'line',
    '#legend_position' => 'bottom',
  );

  $chart['prev_year'] = array(
    '#type' => 'chart_data',
    '#title' => 'Year ' . $prev_year,
    '#data' => array_values($data2),
    '#color' => '#09F',
  );

  $chart['last_year'] = array(
    '#type' => 'chart_data',
    '#title' => 'Year ' . $last_year,
    '#data' => array_values($data1),
    '#color' => '#F60',
  );

  $chart['xaxis'] = array(
    '#type' => 'chart_xaxis',
    '#labels' => array('01','02','03','04','05','06','07','08','09','10','11','12'),
  );

  $output .= '<h2 class="ga_list_title last_30"><i class="fa fa-bar-chart-o"></i> Page Views in ' . $last_year . '</h2>' . drupal_render($chart);

  // Pull GA data. *********************************************************
  /*$params = array(
    'metrics' => array('ga:sessions', 'ga:users', 'ga:pageviews'),
    'start_date' => $start_time,
    'end_date' => $end_time,
  );
  $feed = google_analytics_api_report_data($params);

  $result = $feed->results->rows[0];

  // Get 1 year before last year.
  $params = array(
    'metrics' => array('ga:sessions', 'ga:users', 'ga:pageviews'),
    'start_date' => strtotime('1/1 -2 years'),
    'end_date' => strtotime('1/1 -1 year'),
  );
  $feed = google_analytics_api_report_data($params);

  $result_prev = $feed->results->rows[0];

  $change = round(($result['sessions'] - $result_prev['sessions'])/$result_prev['sessions']*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;
  $change_class = $change >= 0 ? 'ga-change-up' : 'ga-change-down';
  $list[] = '<div class="change_container"> <div class="ga-label">Visits <br/></div>
              <div class="clearfix cgange_holder">
                <span class="ga-value">'
                  . number_format($result['sessions']) .
                  '</span>
              <span class="ga-percent ' . $change_class . '">'
              . $change .
              '%</span>
              </div></div>';

  $change = round(($result['users'] - $result_prev['users'])/$result_prev['users']*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;
  $change_class = $change >= 0 ? 'ga-change-up' : 'ga-change-down';

  $list[] = '<div class="change_container"> <div class="ga-label">Unique Visitors <br/></div>
              <div class="clearfix cgange_holder">
                <span class="ga-value">'
                  . number_format($result['users']) .
                '</span>
              <span class="ga-percent ' . $change_class . '">'
                . $change .
              '%</span>
              </div></div>';

  $page_visit = round(($result['pageviews'] / $result['sessions']), 2);
  $page_visit_prev = round(($result_prev['pageviews'] / $result_prev['sessions']), 2);
  $change = round(($page_visit - $page_visit_prev)/$page_visit_prev*100, 1);
  $change = ($change >= 0 ? '+' : '') . $change;
  $change_class = $change >= 0 ? 'ga-change-up' : 'ga-change-down';

  $list[] = '<div class="change_container"> <div class="ga-label">Pages/Visit <br/></div>
              <div class="clearfix cgange_holder">
                <span class="ga-value">'
                  . round($page_visit, 1) .
                '</span>
              <span class="ga-percent ' . $change_class . '">'
              . $change .
              '%</span>
              </div></div>';

  $attributes = array('class' => array('ga_site_usage_list', 'clearfix'));
  $output .= '<h2 class="ga_list_title last_seven"><i class="fa fa-tachometer"></i> Site Usage in ' . $last_year . ' (with changes compared to the previous year)</h2>' . theme('item_list', array('items' => $list, 'attributes' => $attributes ));*/


  // Pull GA data. *********************************************************
  $params = array(
    'metrics' => array('ga:pageviews'),
    'dimensions' => array('ga:pagePath', 'ga:pageTitle'),
    'segment' => 'gaid::-1',
    'sort_metric' => array('-ga:pageviews'),
    'start_date' => $start_time,
    'end_date' => $end_time,
    'sort' => '-ga:pageviews',
    'filters' => 'ga:pageTitle!=(not set)',
    'max_results' => 100,
  );
  $feed = google_analytics_api_report_data($params);

  $list = $counts = $titles = array();
  foreach ($feed->results->rows as $row) {
    if ($row['pagePath'] == '/') {
      $title = 'Home page';
    }
    else {
      list($title, ) = explode(' | ', $row['pageTitle']);
    }

    if (isset($counts[$row['pagePath']])) {
      $counts[$row['pagePath']] += $row['pageviews'];
    }
    else {
      $counts[$row['pagePath']] = $row['pageviews'];
      $titles[$row['pagePath']] = $title;
    }
  }

  arsort($counts);
  $counts = array_slice($counts, 0, 25);

  foreach ($counts as $path => $views) {
    $list[] = '<span class="ga-link">' . l($titles[$path], substr($path, 1)) . '</span>' . '<span class="ga-num">' . number_format($views) . '</span>';
  }

  $attributes = array('class' => array('ga_list','ga_most_visited_list','clearfix'));
  $output .= '<h2 class="ga_list_title most_visited" ><i class="fa fa-desktop"></i>Most Visited Pages (Popular Pages) in ' . $last_year . '</h2>' . theme('item_list', array('items' => $list, 'type' => 'ul', 'attributes' => $attributes) );


  // Pull GA data. *********************************************************
  $params = array(
    'metrics' => array('ga:sessions'),
    'dimensions' => array('ga:source', 'ga:medium'),
    'sort_metric' => array('-ga:sessions'),
    'filters' => 'ga:medium==referral',
    'start_date' => $start_time,
    'end_date' => $end_time,
    'max_results' => 25,
  );

  $feed = google_analytics_api_report_data($params);

  $list = array();
  foreach ($feed->results->rows as $row) {
    $list[] = '<span class="ga-link">' . $row['source'] . '</span>' . '<span class="ga-num">' . number_format($row['sessions']) . '</span>';
  }
  $attributes = array('class' => array('ga_list','ga_referred_trafic','clearfix'));
  $output .= '<h2 class="ga_list_title" ><i class="fa fa-truck"></i> Referral Traffic Sources in ' . $last_year . '</h2>' . theme('item_list', array('items' => $list, 'type' => 'ul', 'attributes' => $attributes) );


  // Pull GA data. *********************************************************
  $params = array(
    'metrics' => array('ga:sessions'),
    'dimensions' => array('ga:keyword'),
    'sort_metric' => array('-ga:sessions'),
    'start_date' => $start_time,
    'end_date' => $end_time,
    'filters' => 'ga:keyword!=(not provided);ga:keyword!=(not set)',
    'max_results' => 25,
  );

  $feed = google_analytics_api_report_data($params);

  $list = array();
  foreach ($feed->results->rows as $row) {
    $list[] = '<span class="ga-link">' . $row['keyword'] . '</span>' . '<span class="ga-num">' . number_format($row['sessions']) . '</span>';
  }

  $attributes = array('class' => array('ga_list','ga_google_searches','clearfix'));
  $output .= '<h2 class="ga_list_title"><i class="fa fa-globe"></i> Google Searches in ' . $last_year . '</h2>' . theme('item_list', array('items' => $list, 'type' => 'ul', 'attributes' => $attributes) );

  // Report summary at top.
  $summary_last_year = date('Y', strtotime('Jan 1 last year'));
  $summary_prev_year = date('Y', strtotime('Jan 1 -2 years'));
  $summary_domain = $_SERVER['HTTP_HOST'];
  if ($summary_prev_data_exists) {
    $summary_visitor_inc_dec = $summary_visitor_change > 0 ? 'increase' : 'decrease';
    $summary_views_inc_dec = $summary_views_change > 0 ? 'increase' : 'decrease';
    $summary_sessions_inc_dec = $summary_sessions_change > 0 ? 'increase' : 'decrease';

    $summary =<<<OUT
      <div class="well">
        <h4>Report Summary</h4>
        <p>In {$summary_last_year} the {$summary_domain} website had {$summary_unique_visitors} unique visitors (a {$summary_visitor_change}% {$summary_visitor_inc_dec} over {$summary_prev_year}) who viewed {$summary_views} (a {$summary_views_change}% {$summary_views_inc_dec} over {$summary_prev_year}) in {$summary_sessions} sessions (a {$summary_sessions_change}% {$summary_sessions_inc_dec} over {$summary_prev_year}). The website received {$summary_device_mobile}% of its traffic from mobile devices in {$summary_last_year}.</p>
      </div>
OUT;
  }
  elseif ($summary_views) {
    $summary =<<<OUT
      <div class="well">
        <h4>Report Summary</h4>
        <p>In {$summary_last_year} the {$summary_domain} website had {$summary_unique_visitors} unique visitors who viewed {$summary_views} in {$summary_sessions} sessions. The website received {$summary_device_mobile}% of its traffic from mobile devices in {$summary_last_year}.</p>
      </div>
OUT;
  }
  else {
    // No collected data.
    $summary = '';
  }

  $output = $summary . $output;

  // Reuse styles defined for dashboard block.
  return '<div id="dashboard"><div class="block block-dashboardga">' . $output . '</div></div>';
}
